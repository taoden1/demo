/*
 * Created on 2018-10-02 ( Date ISO 2018-10-02 - Time 12:09:08 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.0.0
*/
package org.demo.service;



import java.util.List;

import javax.transaction.Transactional;

import org.demo.entity.ParentsAndGuardians;
import org.demo.repository.ParentsAndGuardiansRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
@Transactional
public class ParentsAndGuardiansServiceImpl implements ParentsAndGuardiansService {

	@Autowired
	private ParentsAndGuardiansRepository parentsAndGuardiansRepository;

	@Override
	public ParentsAndGuardians getOne(Integer personId) {
		return parentsAndGuardiansRepository.findById(personId).get();
	}

	@Override
	public Boolean delete(Integer personId) {
		if (parentsAndGuardiansRepository.getOne(personId) != null) {
			parentsAndGuardiansRepository.deleteById(personId);
			return true;
		}
		return false;
	}

	@Override
	public ParentsAndGuardians create(ParentsAndGuardians parentsAndGuardians) {
		return parentsAndGuardiansRepository.save(parentsAndGuardians);
	}

	@Override
	public ParentsAndGuardians update(ParentsAndGuardians parentsAndGuardiansToUpdate) {
						ParentsAndGuardians parentsAndGuardians = parentsAndGuardiansRepository.getOne(parentsAndGuardiansToUpdate.getPersonId());
																																						
			
				if(parentsAndGuardiansToUpdate.getGender() !=null) {
			
		}
				if(parentsAndGuardiansToUpdate.getFirstName() !=null) {
			
		}
				if(parentsAndGuardiansToUpdate.getMiddleName() !=null) {
			
		}
				if(parentsAndGuardiansToUpdate.getLastName() !=null) {
			
		}
				if(parentsAndGuardiansToUpdate.getCellMobileNumber() !=null) {
			
		}
				if(parentsAndGuardiansToUpdate.getEmailAddress() !=null) {
			
		}
				if(parentsAndGuardiansToUpdate.getOtherDetails() !=null) {
			
		}
				return parentsAndGuardiansRepository.save(parentsAndGuardians);
	}

	@Override
	public Boolean exist(ParentsAndGuardians parentsAndGuardians) {
						return parentsAndGuardiansRepository.existsById(parentsAndGuardians.getPersonId());
																																					}

	@Override
	public List<ParentsAndGuardians> findAll() {
		return parentsAndGuardiansRepository.findAll();
	}

}


